---

- name: "Update inventory"
  uri:
    url: "{{ awx_endpoint }}/inventory_sources/{{ awx_inventory_source }}/update/"
    method: POST
    headers: "{{ awx_headers }}"
    status_code: [200, 201, 202]
    validate_certs: false
  register: awx_inventory_update

- name: "Check API status until it changes to successful"
  uri:
    url: "{{ awx_endpoint }}/inventory_updates/{{ awx_inventory_update.json.id }}/"
    method: GET
    headers: "{{ awx_headers }}"
    status_code: [200, 201, 202]
    validate_certs: false
  failed_when: false
  register: status_response
  until: status_response.json.status == "successful"
  retries: 30
  delay: 5

- name: "Define request_nb_filter"
  set_fact:
    request_nb_filter: "request_id={{ netbox_request_id }}"

- name: "Pull change data"
  set_fact:
    netbox_payload: "{{ query('netbox.netbox.nb_lookup', 'object-changes', validate_certs=False, api_endpoint=netbox_uri, api_filter=request_nb_filter, token=netbox_token) }}"

- name: "Filter NetBox payload for matching entries"
  set_fact:
    netbox_request_payloads: "{{ netbox_payload | selectattr('value.changed_object_type', 'in', nb_change_types) | map(attribute='value') | list }}"

- name: "End play if no matching entries"
  ansible.builtin.meta: end_play
  when: netbox_request_payloads | length == 0

- name: "Process each matching entry"
  include_tasks: process_entry.yml
  loop: "{{ netbox_request_payloads }}"
  loop_control:
    loop_var: netbox_request_payload
